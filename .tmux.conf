# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set-option -g prefix M-Space
bind-key C-Space send-prefix

### Options ###

# use 256 term for pretty colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',*:Tc' # this is for 256 color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape

# increase scroll-back history
set -g history-limit 10000

# decrease command delay (increases vim responsiveness)
set -s escape-time 0

# increase repeat time for repeatable commands
set -g repeat-time 10000

# use vim key bindings
setw -g mode-keys vi
set -g status-keys vi

# vim in copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle:
bind-key -T copy-mode-vi i send-keys -X select-word
# send selection to system clipboard (requires xclip)
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Escape send-keys -X cancel

### WINDOW OPTIONS ###

# start window numbering at 1
set -g base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# Rename window to reflect current program
set -g automatic-rename on

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

### Key Commands ###

# reload config -U
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# copy & paste
bind-key c copy-mode
bind-key p paste-buffer
bind-key P choose-buffer

# toggle statusbar
bind-key T set-option status

# Sessions
bind-key '\' new

### PANES & WINDOWS

# Choose from list of all panes and windows.
bind-key n choose-tree

# Add & remove windows
bind-key Enter new-window -c "#{pane_current_path}"
bind-key Q kill-window

# Switch windows using shift-arrow without prefix
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
bind-key Tab last-window

# Move window using ctrl+shift+arrow without prefix.
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1


# Add & remove panes
bind-key [ split-window -v -c "#{pane_current_path}"
bind-key ] split-window -h -c "#{pane_current_path}"
bind-key q kill-pane

# Switch panes using Alt-arrow without prefix.
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R


# Resize panes using Alt-Shift-arrow without prefix.
bind-key -n M-S-Up resize-pane -U 5
bind-key -n M-S-Down resize-pane -D 5
bind-key -n M-S-Left resize-pane -L 5
bind-key -n M-S-Right resize-pane -R 5


# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=#ffffff bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=#c25704'


### STATUSBAR ###
set -g status on
set -g status-keys vi
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=black fg=white dim'

# left status
set -g status-left-length 20
set -g status-left-style 'fg=white bg=red bold'
set -g status-left '#{?client_prefix, PREFIX ,}'

is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo ' OFF |')#[default]"

# right status
set -g status-right-style 'bg=#353535 fg=green bold'
set -g status-right "$is_keys_off #{?window_zoomed_flag, üîç | ,}#{client_session} | #H "
# set -g status-right-length 50

# window status
setw -g window-status-separator ''
setw -g window-status-style 'fg=white bg=black'
setw -g window-status-format ' #I: #W '
# current window
setw -g window-status-current-style 'fg=white bg=#353535 bold'
setw -g window-status-current-format ' #I: #W '


# setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# # messages
set -g message-style 'fg=white bg=black bold'

#########################################
### Nesting local and remote sessions ###
#########################################

# Copied from https://github.com/samoshkin/tmux-config/

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-space", usable both for local and remote session
# we don't want to "C-space" + "space" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings ¬∑ Issue #237 ¬∑ tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    # set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    # set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    # set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  # set -u status-style \;\
  # set -u window-status-current-style \;\
  # set -u window-status-current-format \;\
  refresh-client -S

# PLUGINS
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'
set-option -g @plugin 'fszymanski/tmux-urlscan'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
